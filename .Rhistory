library(here)
# Proficiency plots and analysis
goodale_theme <- function() {
theme(
panel.background = element_rect(fill = "white"),
axis.text = element_text(colour = "black", family = "Times New Roman", size = 10),
axis.title = element_text(colour = "black", family = "Times New Roman", size = 12),
legend.position = "bottom",
legend.title = element_text(colour = "black", family = "Times New Roman", size = 10),
legend.text = element_text(colour = "black", family = "Times New Roman", size = 10),
plot.title = element_text(colour = "black", family = "Times New Roman", size = 14, hjust = 0.5)  # Center align the title
)
}
l2_df = read.csv(here("data", "tidy", "tidy_ldt_l2.csv")) %>%
mutate(group = "L2 Spanish")
l3_df = read.csv(here("data", "tidy", "tidy_ldt.csv")) %>%
mutate(group = "L3 Spanish")
comb_df = rbind(l2_df, l3_df)
## Filter for participants who got more than 70 correct trials
cdf = comb_df %>%
group_by(ppt, group) %>%
summarize(no_correct = sum(is_correct))
e_df_3way = comb_df %>%
group_by(ppt, type) %>%
summarize(mean_rt = mean(log_rt)) %>%
pivot_wider(names_from = type, values_from = mean_rt) %>%
mutate(three_way_cognate_effect = non_cognate - three_way_cognate)
e_df_2way = comb_df %>%
group_by(ppt, type) %>%
summarize(mean_rt = mean(log_rt)) %>%
pivot_wider(names_from = type, values_from = mean_rt) %>%
mutate(two_way_cognate_effect = non_cognate - two_way_cognate)
prof_df$no_correct
prof_df = left_join(cdf, e_df_3way, by = "ppt") %>%
left_join(e_df_2way, by = "ppt") %>%
select(group, ppt, two_way_cognate_effect, three_way_cognate_effect, no_correct) %>%
pivot_longer(cols = c(3:4), names_to = "effect_type", values_to = "value") + ylab("Effect from non-cognate") + xlab("Answers correct")
prof_df$no_correct
prof_df = left_join(cdf, e_df_3way, by = "ppt") %>%
left_join(e_df_2way, by = "ppt") %>%
select(group, ppt, two_way_cognate_effect, three_way_cognate_effect, no_correct) %>%
pivot_longer(cols = c(3:4), names_to = "effect_type", values_to = "value")
## The proficiency effect is in the opposite direction
prof_df %>%
ggplot(aes(x = no_correct, y = value, color = effect_type)) + geom_point(alpha = .4) +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~group) + goodale_theme() +
ylab("Effect from non-cognate") + xlab("Answers correct")
prof_df %>%
ggplot(aes(x = no_correct, y = value, color = effect_type)) + geom_point(alpha = .4) +
geom_smooth(method = "loess", se = FALSE) +
facet_wrap(~group) + goodale_theme() +
ylab("Effect from non-cognate") + xlab("Answers correct")
prof_df %>%
ggplot(aes(x = no_correct, y = value, color = effect_type)) + geom_point(alpha = .4) +
geom_smooth(method = "loess", se = FALSE) +
facet_wrap(~group) + goodale_theme() +
scale_y_reverse() +
ylab("Effect from non-cognate") + xlab("Answers correct")
prof_df %>%
ggplot(aes(x = no_correct, y = value, color = effect_type)) + geom_point(alpha = .4) +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~group) + goodale_theme() +
scale_y_reverse() +
ylab("Effect from non-cognate") + xlab("Answers correct")
prof_df %>%
ggplot(aes(x = no_correct, y = value, color = effect_type)) + geom_point(alpha = .4) +
geom_smooth(method = "loess", se = FALSE) +
facet_wrap(~group) + goodale_theme() +
scale_y_reverse() +
ylab("Effect from non-cognate") + xlab("Answers correct")
ggsave("prof_plot.png", path = here("slides", "img"))
source("~/Documents/GitHub/l3_cognate_study_official/scripts/07_proficiency_analysis.R")
prof_df %>%
ggplot(aes(x = no_correct, y = value, color = effect_type)) + geom_point(alpha = .4) +
geom_smooth(method = "loess", se = FALSE) +
facet_wrap(~group) + goodale_theme() +
scale_y_reverse() +
ylab("Effect from non-cognate") + xlab("Answers correct")
ggsave("prof_plot.png", path = here("slides", "img"))
source("~/Documents/GitHub/l3_cognate_study_official/scripts/07_proficiency_analysis.R")
ggplot(prof_df, aes(x = no_correct, y = value)) +
geom_point(color = 'blue') +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Hypothetical Plateau Effect",
x = "Language Proficiency",
y = "Reaction Time (ms)") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
ggplot(prof_df, aes(x = no_correct, y = value)) +
geom_point(color = 'blue') +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Hypothetical Plateau Effect",
x = "Language Proficiency",
y = "Reaction Time (ms)") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
l
lp[clsv]
ggplot(prof_df, aes(x = no_correct, y = value)) +
geom_point(color = 'blue') +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Hypothetical Plateau Effect",
x = "Language Proficiency",
y = "Reaction Time (ms)") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
source("~/Documents/GitHub/l3_cognate_study_official/scripts/07_proficiency_analysis.R")
library(tidyverse)
library(here)
# Proficiency plots and analysis
goodale_theme <- function() {
theme(
panel.background = element_rect(fill = "white"),
axis.text = element_text(colour = "black", family = "Times New Roman", size = 10),
axis.title = element_text(colour = "black", family = "Times New Roman", size = 12),
legend.position = "bottom",
legend.title = element_text(colour = "black", family = "Times New Roman", size = 10),
legend.text = element_text(colour = "black", family = "Times New Roman", size = 10),
plot.title = element_text(colour = "black", family = "Times New Roman", size = 14, hjust = 0.5)  # Center align the title
)
}
l2_df = read.csv(here("data", "tidy", "tidy_ldt_l2.csv")) %>%
mutate(group = "L2 Spanish")
l3_df = read.csv(here("data", "tidy", "tidy_ldt.csv")) %>%
mutate(group = "L3 Spanish")
comb_df = rbind(l2_df, l3_df)
prof_df %>%
ggplot(aes(x = no_correct, y = value, color = effect_type)) + geom_point(alpha = .4) +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~group) + goodale_theme() +
scale_y_reverse() +
ylab("Effect from non-cognate") + xlab("Answers correct")
prof_df %>%
ggplot(aes(x = no_correct, y = value, color = effect_type)) + geom_point(alpha = .4) +
geom_smooth(method = "loess", se = FALSE) +
facet_wrap(~group) + goodale_theme() +
scale_y_reverse() +
ylab("Effect from non-cognate") + xlab("Answers correct")
ggplot(data, aes(x = language_proficiency, y = reaction_time)) +
geom_point(color = 'blue') +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Hypothetical Plateau Effect",
x = "Language Proficiency",
y = "Reaction Time (ms)") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
ggsave("prof_plot.png", path = here("slides", "img"))
ggplot(prof_df, aes(x = no_correct, y = value)) +
geom_point(color = 'blue') +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Hypothetical Plateau Effect",
x = "Language Proficiency",
y = "Reaction Time (ms)") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
ggplot(prof_df, aes(x = no_correct, y = value)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Hypothetical Plateau Effect",
x = "Language Proficiency",
y = "Reaction Time (ms)") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
ggplot(prof_df, aes(x = no_correct, y = value)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data Effect",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
ggplot(prof_df, aes(x = no_correct, y = value)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
prof_df %>%
filter(group == "L2 Spanish")
prof_df %>%
filter(group == "L2 Spanish") %>%
ggplot(aes(x = no_correct, y = value)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
prof_df %>%
filter(group == "L2 Spanish")
prof_df %>%
filter(group == "L2 Spanish") %>%
group_by(ppt, no_correct) %>%
summarise(value_b = mean(value))
prof_df %>%
filter(group == "L2 Spanish") %>%
group_by(ppt, no_correct) %>%
summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = value_b)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
prof_df %>%
filter(group == "L2 Spanish") %>%
group_by(ppt, no_correct) %>%
summarise(value_b = mean(value))
ggsave("comp_to_hpng", path = here("slides", "img"))
p_data_l2 %>%
group_by(type, ppt) %>%
summarize(mean_rt = mean(key_resp_lextale_trial.rt),
sd_rt = sd(key_resp_lextale_trial.rt)) %>%
ggplot(aes(x = type, y = mean_rt, fill = type)) +
geom_col(position = "dodge", color = "black") + theme_classic() + xlab("Word Type") + ylab("Reaction Time (ms)") +
theme(legend.position = "none") +
facet_wrap(~ppt)
prof_df %>%
filter(group == "L2 Spanish") %>%
group_by(ppt, no_correct) %>%
summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = value_b)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
ggsave("comp_to_hpng", path = here("slides", "img"))
prof_df %>%
filter(group == "L2 Spanish") %>%
group_by(ppt, no_correct) %>%
summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = value_b)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
ggsave("comp_to_hpng", path = here("slides", "img"))
ggsave("comp_to_h.png", path = here("slides", "img"))
source("~/Documents/GitHub/l3_cognate_study_official/scripts/07_proficiency_analysis.R")
knitr::include_graphics(here("slides", "img", "prof_h.png"))
knitr::include_graphics(here("slides", "img", "comp_to_h.png"))
prof_df %>%
filter(group == "L2 Spanish") %>%
group_by(ppt, no_correct) %>%
summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = value_b)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())
prof_df %>%
# filter(group == "L2 Spanish") %>%
group_by(ppt, no_correct) %>%
summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = value_b)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
prof_df %>%
# filter(group == "L2 Spanish") %>%
group_by(ppt, no_correct) %>%
summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = value_b)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
# Plot the data
ggplot(data, aes(x = language_proficiency, y = reaction_time)) +
geom_point(color = 'blue') +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Hypothetical Plateau Effect",
x = "Language Proficiency",
y = "Reaction Time (ms)") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())
prof_df %>%
filter(group == "L2 Spanish") %>%
group_by(ppt, no_correct) %>%
summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = value_b)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
source("~/Documents/GitHub/l3_cognate_study_official/scripts/07_proficiency_analysis.R")
prof_df %>%
filter(group == "L2 Spanish")
prof_df %>%
filter(group == "L2 Spanish") %>%
#  group_by(ppt, no_correct) %>%
#  summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = value)) +
geom_point(color = 'blue') +
scale_y_reverse()
prof_df %>%
filter(group == "L2 Spanish")
comb_df %>%
left_join(by = "ppt")
comb_df %>%
left_join(by = "ppt")
comb_df %>%
left_join(cdf, by = "ppt")
comb_df %>%
left_join(cdf, by = "ppt") %>%
#  group_by(ppt, no_correct) %>%
#  summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = log_rt))
comb_df %>%
left_join(cdf, by = "ppt") %>%
#  group_by(ppt, no_correct) %>%
#  summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = log_rt)) +
geom_point(color = 'blue')
comb_df %>%
left_join(cdf, by = "ppt") %>%
#  group_by(ppt, no_correct) %>%
#  summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = log_rt)) +
geom_point(color = 'blue') +
scale_y_reverse()
comb_df %>%
left_join(cdf, by = "ppt") %>%
#  group_by(ppt, no_correct) %>%
#  summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = log_rt)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())
comb_df %>%
left_join(cdf, by = "ppt") %>%
#  group_by(ppt, no_correct) %>%
#  summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = log_rt)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "lm")
comb_df
comb_df %>%
left_join(cdf, by = "ppt") %>%
filter()
comb_df %>%
left_join(cdf, by = "ppt") %>%
filter(type == "three_way_cognate")
comb_df %>%
left_join(cdf, by = "ppt") %>%
filter(type == "three_way_cognate") %>%
#  group_by(ppt, no_correct) %>%
#  summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = log_rt)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
comb_df %>%
left_join(cdf, by = "ppt") %>%
filter(type == "three_way_cognate") %>%
#  group_by(ppt, no_correct) %>%
#  summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = log_rt)) +
geom_point(color = 'blue') +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
prof_df %>%
filter(group == "L2 Spanish") %>%
group_by(ppt, no_correct) %>%
summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = value_b)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
ggsave("comp_to_h.png", path = here("slides", "img"))
source("~/Documents/GitHub/l3_cognate_study_official/scripts/07_proficiency_analysis.R")
p_data_l2
prof_df %>%
filter(group == "L2 Spanish") %>%
group_by(ppt, no_correct) %>%
summarise(value_b = mean(value)) %>%
ggplot(aes(x = no_correct, y = value_b)) +
geom_point(color = 'blue') +
scale_y_reverse() +
geom_smooth(method = "loess", se = FALSE, color = 'red') +
labs(title = "Collected Data",
x = "Language Proficiency",
y = "Reaction Time") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Mute specific numbers on x-axis
axis.text.y = element_blank(),  # Mute specific numbers on y-axis
axis.ticks = element_blank())   # Remove ticks
prof_df
View(prof_df)
source("~/Documents/GitHub/l3_cognate_study_official/scripts/07_proficiency_analysis.R")
ggplot(prof_df, aes(x = group, y = value)) +
geom_boxplot(fill = c("lightblue", "lightgreen")) +
labs(title = "Hypothetical CFE for L2 and L3 Speakers",
x = "Group",
y = "Effect") +
theme_minimal() + xlab("")
# Plot the data
ggplot(prof_df, aes(x = group, y = value)) +
geom_boxplot(fill = c("lightblue", "lightgreen")) +
labs(title = "Hypothetical CFE for L2 and L3 Speakers",
x = "Group",
y = "Reduction in RT") +
scale_y_reverse() +
theme_minimal() + xlab("")
ggplot(prof_df, aes(x = group, y = value)) +
geom_boxplot(fill = c("lightblue", "lightgreen")) +
labs(title = "Hypothetical CFE for L2 and L3 Speakers",
x = "Group",
y = "Reduction in RT") +
scale_y_reverse() +
theme_minimal() + xlab("")
ggsave("comp_to_h_b.png", path = here("slides", "img"))
unique(l2_df$ppt)
source("~/Documents/GitHub/l3_cognate_study_official/scripts/07_proficiency_analysis.R")
